basePath: /
definitions:
  model.Note:
    properties:
      id:
        type: string
      public:
        type: boolean
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для сервиса заметок с хранением в PostgreSQL и MinIO
  title: DropNote API
  version: "1.0"
paths:
  /api/notes:
    post:
      consumes:
      - application/json
      description: Принимает JSON с текстом заметки, сохраняет мета-данные в PostgreSQL,
        а содержимое — в MinIO.
      parameters:
      - description: Данные заметки
        in: body
        name: note
        required: true
        schema:
          $ref: '#/definitions/model.Note'
      produces:
      - application/json
      responses:
        "201":
          description: Заметка успешно создана, возвращает note_id
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный JSON
          schema:
            type: string
        "415":
          description: Content-Type должен быть application/json
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Создание заметки
      tags:
      - notes
  /api/notes/{note_id}:
    get:
      consumes:
      - application/json
      description: Возвращает заметку по её идентификатору, переданному в URL.
      parameters:
      - description: ID заметки
        in: path
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Заметка успешно получена
          schema:
            $ref: '#/definitions/model.Note'
        "400":
          description: Некорректный запрос
          schema:
            type: string
        "404":
          description: Заметка не найдена
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Получение заметки
      tags:
      - notes
  /health:
    get:
      description: Эндпоинт для проверки работоспособности API
      produces:
      - text/plain
      responses:
        "200":
          description: Its alive!
          schema:
            type: string
      summary: Проверка состояния сервиса
      tags:
      - health
swagger: "2.0"
